:root {
    --font-size-base: 1rem;
    --line-height-base: 1.4285714286;
    --border-radius: 0.25rem;
    --custom-control-gutter: 0.5rem;
    --custom-control-indicator-size: 1rem;
    --custom-control-indicator-bg: var(--white);
    --custom-control-indicator-border-color: var(--gray-07);
    --custom-control-indicator-border-width: 0.0625rem;
    --custom-switch-width: calc(var(--custom-control-indicator-size) * 1.75);
    --custom-switch-indicator-border-radius: calc(var(--custom-control-indicator-size) / 2);
    --custom-switch-indicator-size: subtract(
        var(--custom-control-indicator-size),
        var(--custom-control-indicator-border-width) * 4
    );
    --custom-forms-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
        box-shadow 0.15s ease-in-out;
    --custom-control-indicator-checked-disabled-bg: rgba(var(--primary), 0.5);
    --input-line-height: var(--line-height-base);
    --input-line-height-sm: var(--line-height-base);
    --input-line-height-lg: var(--line-height-base);
    --input-padding-y: 0.375rem;
    --input-padding-y-sm: 0.25rem;
    --input-padding-y-lg: 0.5rem;
    --input-padding-x: 0.75rem;
    --input-padding-x-sm: 0.5rem;
    --input-padding-x-lg: 1rem;
    --input-color: var(--gray-08);
    --border-width: 0.0625rem;
    --input-height-border: calc(0.0625rem * 2);
    --custom-select-height: add(
        var(--input-line-height) * 1em,
        add(var(--input-padding-y) * 2, var(--input-height-border), false)
    );
    --custom-select-height-sm: add(
        var(--input-line-height-sm) * 1em,
        add(var(--input-padding-y-sm) * 2, var(--input-height-border), false)
    );
    --custom-select-height-lg: add(
        var(--input-line-height-lg) * 1em,
        add(var(--input-padding-y-lg) * 2, var(--input-height-border), false)
    );
    --custom-select-padding-y: var(--input-padding-y);
    --custom-select-padding-y-sm: var(--input-padding-y-sm);
    --custom-select-padding-y-lg: var(--input-padding-y-lg);
    --custom-select-padding-x: var(--input-padding-x);
    --custom-select-padding-x-sm: var(--input-padding-x-sm);
    --custom-select-padding-x-lg: var(--input-padding-x-lg);
    --custom-select-font-size: 0.875rem;
    --custom-select-color: var(--gray-07);
    --custom-select-bg-size: 16px 16px;
    --custom-select-box-shadow: inset 0 1px 2px rgba(var(--black), 0.075);
}

// Variables
$custom-select-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$gray-06}' viewBox='0 0 24 24'><path d='M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6-6-6 1.41-1.42z'/></svg>");
$custom-select-background: escape-svg($custom-select-indicator) no-repeat right var(--custom-select-padding-x) center /
    var(--custom-select-bg-size);

.custom-control {
    position: relative;
    z-index: 1;
    display: block;
    min-height: calc(var(--font-size-base) * var(--line-height-base));
    padding-left: calc(var(--custom-control-gutter) + var(--custom-control-indicator-size));
}

.custom-control-inline {
    display: inline-flex;
    margin-right: 1rem;
}

.custom-control-input {
    position: absolute;
    left: 0;
    z-index: -1; // Put the input behind the label so it doesn't overlay text
    width: var(--custom-control-indicator-size);
    height: calc((calc(var(--font-size-base) * var(--line-height-base)) + var(--custom-control-indicator-size)) / 2);
    opacity: 0;

    &:checked ~ .custom-control-label::before {
        color: var(--white);
        border-color: $primary;
        background-color: $primary;
    }

    &:focus ~ .custom-control-label::before {
        box-shadow: 0 0 0 0.2rem rgba($primary, 0.25);
    }

    &:focus:not(:checked) ~ .custom-control-label::before {
        border-color: lighten($primary, 25%);
    }

    &:not(:disabled):active ~ .custom-control-label::before {
        color: var(--white);
        background-color: lighten($primary, 35%);
        border-color: lighten($primary, 35%);
    }

    // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
        ~ .custom-control-label {
            color: var(--gray-08);

            &::before {
                background-color: var(--gray-03);
            }
        }
    }
}

// Custom control indicators

// Build the custom controls out of pseudo-elements.

.custom-control-label {
    position: relative;
    margin-bottom: 0;
    vertical-align: top;

    // Background-color and (when enabled) gradient
    &::before {
        position: absolute;
        top: calc((calc(var(--font-size-base) * var(--line-height-base)) - var(--custom-control-indicator-size)) / 2);
        left: calc(-1 * (var(--custom-control-gutter) + var(--custom-control-indicator-size)));
        display: block;
        width: var(--custom-control-indicator-size);
        height: var(--custom-control-indicator-size);
        pointer-events: none;
        content: '';
        background-color: var(--custom-control-indicator-bg);
        border: var(--custom-control-indicator-border-color) solid var(--custom-control-indicator-border-width);
    }

    // Foreground (icon)
    &::after {
        position: absolute;
        top: calc(((var(--font-size-base) * var(--line-height-base)) - var(--custom-control-indicator-size)) / 2);
        left: calc(-1 * (var(--custom-control-gutter) + var(--custom-control-indicator-size)));
        display: block;
        width: var(--custom-control-indicator-size);
        height: var(--custom-control-indicator-size);
        content: '';
        background: no-repeat 50% / #{50% 50%};
    }
}

// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
    .custom-control-label::before {
        border-radius: var(--border-radius);
    }

    .custom-control-input:checked ~ .custom-control-label {
        &::after {
            background-image: escape-svg(
                url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'><path fill='#{var(--white)}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/></svg>")
            );
        }
    }

    .custom-control-input:indeterminate ~ .custom-control-label {
        &::before {
            border-color: $primary;
            background-color: $primary;
        }
        &::after {
            background-image: escape-svg(
                url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'><path stroke='#{var(--white)}' d='M0 2h4'/></svg>")
            );
        }
    }

    .custom-control-input:disabled {
        &:checked ~ .custom-control-label::before {
            background-color: var(--custom-control-indicator-checked-disabled-bg);
        }
        &:indeterminate ~ .custom-control-label::before {
            background-color: var(--custom-control-indicator-checked-disabled-bg);
        }
    }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
    .custom-control-label::before {
        // stylelint-disable-next-line property-blacklist
        border-radius: 50%;
    }

    .custom-control-input:checked ~ .custom-control-label {
        &::after {
            background-image: escape-svg(
                url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'><circle r='3' fill='#{var(--white)}'/></svg>")
            );
        }
    }

    .custom-control-input:disabled {
        &:checked ~ .custom-control-label::before {
            background-color: var(--custom-control-indicator-checked-disabled-bg);
        }
    }
}

// switches
//
// Tweak a few things for switches

.custom-switch {
    padding-left: calc(var(--custom-switch-width) + var(--custom-control-gutter));

    .custom-control-label {
        &::before {
            left: calc(-1 * (var(--custom-switch-width) + var(--custom-control-gutter)));
            width: var(--custom-switch-width);
            pointer-events: all;
            // stylelint-disable-next-line property-blacklist
            border-radius: var(--custom-switch-indicator-border-radius);
        }

        &::after {
            top: add(
                (calc(var(--font-size-base) * var(--line-height-base)) - var(--custom-control-indicator-size)) / 2,
                calc(var(--custom-control-indicator-border-width) * 2)
            );
            left: add(
                calc(-1 * (var(--custom-switch-width) + var(--custom-control-gutter))),
                calc(var(--custom-control-indicator-border-width) * 2)
            );
            width: var(--custom-switch-indicator-size);
            height: var(--custom-switch-indicator-size);
            background-color: var(--custom-control-indicator-border-color);
            // stylelint-disable-next-line property-blacklist
            border-radius: var(--custom-switch-indicator-border-radius);
            transition: transform 0.15s ease-in-out, var(--custom-forms-transition);
        }
    }

    .custom-control-input:checked ~ .custom-control-label {
        &::after {
            background-color: var(--custom-control-indicator-bg);
            transform: translateX(var(--custom-switch-width) - var(--custom-control-indicator-size));
        }
    }

    .custom-control-input:disabled {
        &:checked ~ .custom-control-label::before {
            background-color: var(--custom-control-indicator-checked-disabled-bg);
        }
    }
}

// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primer.github.io/.
//
.custom-select {
    display: inline-block;
    width: 100%;
    height: var(--custom-select-height);
    padding: var(--input-padding-y) add(var(--input-padding-x), 1rem) var(--input-padding-y) var(--input-padding-x);
    font-size: var(--custom-select-font-size);
    font-weight: 400;
    line-height: var(--line-height-base);
    color: var(--custom-select-color);
    vertical-align: middle;
    background: var(--white) $custom-select-background;
    border: var(--border-width) solid var(--gray-04);
    border-radius: var(--border-radius);
    appearance: none;
    transition: var(--custom-forms-transition);

    &:focus {
        border-color: var(--input-focus-border-color);
        outline: 0;
        box-shadow: var(--input-focus-box-shadow);

        &::-ms-value {
            // For visual consistency with other platforms/browsers,
            // suppress the default white text on blue background highlight given to
            // the selected option text when the (still closed) <select> receives focus
            // in IE and (under certain conditions) Edge.
            // See https://github.com/twbs/bootstrap/issues/19398.
            color: var(--input-color);
            background-color: var(--white);
        }
    }

    &[multiple],
    &[size]:not([size='1']) {
        height: auto;
        padding-right: var(--custom-select-padding-x);
        background-image: none;
    }

    &:disabled {
        color: var(--gray-07);
        background-color: var(--gray-03);
    }

    // Hides the default caret in IE11
    &::-ms-expand {
        display: none;
    }

    // Remove outline from select box in FF
    &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 var(--custom-select-color);
    }
}

.custom-select-sm {
    height: var(--custom-select-height-sm);
    padding-top: var(--custom-select-padding-y-sm);
    padding-bottom: var(--custom-select-padding-y-sm);
    padding-left: var(--custom-select-padding-x-sm);
    font-size: calc(1rem * 0.765625);
}

.custom-select-lg {
    height: var(--custom-select-height-lg);
    padding-top: var(--custom-select-padding-y-lg);
    padding-bottom: var(--custom-select-padding-y-lg);
    padding-left: var(--custom-select-padding-x-lg);
    font-size: calc(1rem * 1.25);
}
